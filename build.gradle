plugins {
    id 'java'
}

group = 'ru.fennec.free'
version = '3.0.16-БЕТА'

compileJava.options.encoding = 'UTF-8'
compileTestJava.options.encoding = 'UTF-8'

repositories {
    mavenCentral()
    maven {
        name = 'spigotmc-repo'
        url = 'https://hub.spigotmc.org/nexus/content/repositories/snapshots/'
    }
    maven {
        name = 'sonatype'
        url = 'https://oss.sonatype.org/content/groups/public/'
    }
    maven {
        url = 'https://repo.extendedclip.com/content/repositories/placeholderapi/'
    }
}

dependencies {
    compileOnly 'org.spigotmc:spigot-api:1.19.4-R0.1-SNAPSHOT'
    implementation 'space.arim.dazzleconf:dazzleconf-ext-snakeyaml:1.3.0-M2'
//    implementation group: 'org.jdbi', name: 'jdbi-bom', version: '3.34.1-SNAPSHOT'
//    implementation group: 'org.jdbi', name: 'jdbi-core', version: '3.34.1-SNAPSHOT'
    implementation group: 'org.jdbi', name: 'jdbi3-core', version: '3.29.0'
    implementation group: 'org.jdbi', name: 'jdbi3-sqlite', version: '3.34.0'
    compileOnly 'me.clip:placeholderapi:2.11.2'
    implementation group: 'org.apache.commons', name: 'commons-lang3', version: '3.0'
}

def targetJavaVersion = 8
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

tasks.withType(JavaCompile).configureEach {
    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release = targetJavaVersion
    }
}

jar {
//    dependsOn configurations.runtimeClasspath
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
    from {
        configurations.runtimeClasspath.findAll {it.name.endsWith('jar') }.collect { zipTree(it) }
//        setDuplicatesStrategy(DuplicatesStrategy.INCLUDE)
    }
}

//processResources {
//    def props = [version: version]
//    inputs.properties props
//    filteringCharset 'UTF-8'
//    filesMatching('plugin.yml') {
//        expand props
//    }
//}
